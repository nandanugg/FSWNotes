Author : Faisal Juliandra (Kelas Pagi)
Tanggal : Selasa, 2 Februari 2021

Judul Materi : Learn PGAdmin
Sub judul:
1. Setup PGAdmin
        menghubungkan PGAdmin dengan postgresql yang kita miliki
Caranya:
- Buka postgresql di terminal dengan menginputkan psql atau jika belum bisa sudo service postgresql start dan kemudian psql
- Setelah itu bisa langsung create database di terminal
- Buka PGAdmin dan masukkan password
- Membuat server baru dengan cara klik kanan di server, kemudian create, pilih server
- Isikan name kemudian berpindah ke tab connection
- Pada tab connection masukan host name/address dengan localhost atau 127.0.0.1
- Kemudian isi username dan password role postgresql yang sudah dibuat
- Lalu save

2. Memasukan query dalam PGAdmin
        dalam PGAdmin untuk memasukkan query perlu membuka query tool yang ada pada database yg sudah dibuat
Caranya:
- Klik dropdown yang ada pada database yang mau kita isi
- Klik kanan pada schemas, pilih query tool, maka kita bisa mengisikan query yang akan kita jalankan di query tool

3. Query
        query merupakan perintah perintah dalam database
Contoh:
-- query create table
CREATE TABLE users (
	id INT, -- INT adalah integer atau number
	first_name VARCHAR(50),
	last_name VARCHAR(50),
	gender VARCHAR(6),
	date_of_birth TIMESTAMP, -- TIMESTAMP memiliki nilai default dari UTC
);

-- setelah create table atau menjalankan query lain, perlu melakukan refresh pada apa yang kita buat atau edit

-- query edit datatype column
ALTER TABLE users
ALTER COLUMN id TYPE VARCHAR(12);

-- query hapus column
ALTER TABLE users
DROP COLUMN date_of_birth;

-- query add column
ALTER TABLE users
ADD COLUMN full_name VARCHAR(100);

-- query rename column
ALTER TABLE users
ADD COLUMN full_name TO full_name_edited;

-- query edit, hapus, dan tambah column secara bersamaan
ALTER TABLE users
ALTER COLUMN id TYPE VARCHAR(12),
DROP COLUMN date_of_birth,
ADD COLUMN full_name VARCHAR(100);

-- hapus table
DROP TABLE users;

4. Create Table with Constraint
        membuat tabel dengan Constraint
Contoh:
-- create table with constraint
CREATE TABLE users (
	id BIGSERIAL PRIMARY KEY,
	first_name VARCHAR(50) NOT NULL UNIQUE,
	last_name VARCHAR(50) NOT NULL,
	gender VARCHAR(6) NOT NULL,
	date_of_birth TIMESTAMP
);

-- edit constraint biar not null ga aktif
ALTER TABLE users
ALTER COLUMN gender DROP NOT NULL;


5. Insert data, get data, edit data, dan delete data
-- insert data
INSERT INTO users (first_name, last_name, gender, date_of_birth)
VALUES ('Nanda', 'Nugraha', 'Male', '1999-01-31')

-- get data
SELECT * FROM users;

-- insert data without column name
INSERT INTO users
VALUES (123, 'Agus', 'Nugraha', 'Male', '1999-01-31');

-- edit data
UPDATE users
SET
date_of_birth = '1999-01-31 23:30:21'
WHERE id = 1;
-- where digunakan untuk mengedit id yang diinginkan

-- delete data
DELETE FROM users
WHERE id = 123;

6. Relation
        membuat relation antar tabel yaitu relation 1 to many
Contoh:
CREATE TABLE pets (
	id BIGSERIAL PRIMARY KEY,
	name VARCHAR(50) NOT NULL,
	user_id BIGSERIAL,
-- 	foreign key tidak bisa merefensikan table yang belum ada
	FOREIGN KEY (user_id) REFERENCES users(id)
-- 	untuk menghapus pets ketika usernya dihapus juga
-- 	FOREIGN KEY (user_id) REFERENCES users(id) ON UPDATE DELETE;
);

INSERT INTO pets (name, user_id)
VAlUES ('ming', 1)

SELECT * FROM pets;

SELECT * FROM pets
JOIN users ON users.id = pets.user_id;

SELECT pets.name, users.first_name FROM pets
JOIN users ON users.id = pets.user_id;

SELECT pets.name AS hewan, users.first_name AS pemilik FROM pets
JOIN users ON users.id = pets.user_id;
-- atau
SELECT pets.name hewan, users.first_name pemilik FROM pets
JOIN users ON users.id = pets.user_id;